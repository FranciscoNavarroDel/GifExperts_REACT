{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GiftGridItem","id","title","gif","className","src","alt","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","images","downsized_medium","url","GifGrid","setImages","useEffect","then","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mLAKMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAClC,IADF,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAACS,GAAD,OAAkBP,GAAlB,mBAAiCO,OAC/CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCRdG,EAAe,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAEnC,OACI,sBAAcC,UAAU,4CAAxB,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,MAFED,I,uBCHZM,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACKC,MAAM,GAAD,OAHd,uCAGc,oBAJX,mCAIW,eACSC,UAAUH,GADnB,eADV,cACRI,EADQ,gBAISA,EAAKC,OAJd,uBAINC,EAJM,EAINA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBC,QAVxB,kBAaPL,GAbO,2CAAH,sDCIAM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAExB,EAA4BrB,mBAAS,IAArC,mBAAO+B,EAAP,KAAeI,EAAf,KAQA,OANAC,qBAAU,WACRhB,EAAQC,GAAUgB,KAAMF,KACvB,CAACd,IAKF,qCACE,6BAAKA,IACL,qBAAKJ,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA+BA,GAAZA,EAAIhB,aCOlBwB,EAxBM,WAEnB,MAAoCtC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAOA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGS,EAAWqB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,YCbxBkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35333b0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\r\n    \"\"\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length>2) {\r\n      setCategories((categories) => [ inputValue, ...categories]);\r\n      setInputValue(\"\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\nexport { AddCategory };\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GiftGridItem = ({id,title,gif}) => {\r\n\r\n    return (\r\n        <div key={id} className=\"card animate__animated animate__rotateIn \">\r\n            <img src={gif} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGiftGridItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n}\r\n","const apiKey = \"KnOsovft36bwr2Qlc2769LiPVwpIQCTl\";\r\nconst url = \"https://api.giphy.com/v1/gifs/search\";\r\n\r\nconst getGifs = async (category) => {\r\n  const resp = await fetch(\r\n    `${url}?api_key=${apiKey}&&q=${encodeURI(category)}&&limit=10`\r\n  );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      gif: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs\r\n};\r\n\r\nexport { getGifs };\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { GiftGridItem } from \"./GiftGridItem\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // Hace que el codigo sea renderizado solo la primera vez\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then( setImages)\r\n  }, [category]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      <div className=\"card_grid\">\r\n        {images.map((img) => (\r\n          <GiftGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  //Hooks\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  //Handles\r\n  // const HandleAdd = ()=>{\r\n  //     setCategories([...categories, \"Hunter X Hunter\" ])\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\nimport \"animate.css\"\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}